{"version":3,"sources":["components/firebase.js","contexts/AuthContext.js","components/Chats.js","components/Login.js","components/App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chats","useContext","handleLogout","a","signOut","getFile","url","fetch","response","blob","data","File","type","axios","get","headers","process","email","uid","then","catch","formdata","FormData","append","photoURL","avatar","name","post","error","console","log","className","onClick","height","projectID","userName","userSecret","Login","id","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","App","style","fontFamily","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAMaA,G,MAAOC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,gDACZC,UAAW,gCACXC,cAAe,4CACfC,kBAAmB,eACnBC,MAAO,8CACNR,QCJCS,EAAcC,IAAMC,gBAKbC,EAAe,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAC3B,EAA8BC,oBAAS,GAAK,mBAArCC,EAAO,KAAEC,EAAU,KAC1B,EAAwBF,mBAAS,MAAK,mBAA/BG,EAAI,KAAEC,EAAO,KACdC,EAAUC,cAEhBC,qBAAU,WAENrB,EAAKsB,oBAAmB,SAACL,GAErBC,EAAQD,GACRD,GAAW,GAERC,GAAME,EAAQI,KAAK,eAE3B,CAACN,EAAME,IAEV,IAAMK,EAAQ,CAAEP,QAEhB,OACI,kBAACR,EAAYgB,SAAQ,CAACD,MAAOA,IACvBT,GAAWF,I,iDCsDVa,EAhFD,WACV,IAAMP,EAAUC,cACRH,EDCiBU,qBAAWlB,GCD5BQ,KACR,EAA8BH,oBAAS,GAAK,mBAArCC,EAAO,KAAEC,EAAU,KAGpBY,EAAY,uCAAG,sBAAAC,EAAA,sEACX7B,EAAK8B,UAAU,KAAD,EACpBX,EAAQI,KAAK,KAAK,2CACrB,kBAHiB,mCAKZQ,EAAO,uCAAG,WAAOC,GAAG,yFACCC,MAAMD,GAAK,KAAD,EAAnB,OAARE,EAAQ,gBACKA,EAASC,OAAO,KAAD,EAAxB,OAAJC,EAAI,yBACH,IAAIC,KAAK,CAACD,GAAO,gBAAiB,CAAEE,KAAM,gBAAe,2CACnE,gBAJY,sCA8Cb,OAvCAjB,qBAAU,WACFJ,EAKJsB,IAAMC,IAAI,sCAAuC,CAC7CC,QAAS,CACL,aAAcC,uCACd,YAAazB,EAAK0B,MAClB,cAAe1B,EAAK2B,OAG3BC,MAAK,WACF7B,GAAW,MAGd8B,OAAM,WACH,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAAShC,EAAK0B,OAC9BI,EAASE,OAAO,WAAWhC,EAAK0B,OAChCI,EAASE,OAAO,SAAUhC,EAAK2B,KAG/Bb,EAAQd,EAAKiC,UAERL,MAAK,SAACM,GACHJ,EAASE,OAAO,SAAUE,EAAQA,EAAOC,MAEzCb,IAAMc,KAAK,mCACPN,EACA,CAAEN,QAAS,CAAE,cAAeC,0CAE/BG,MAAK,kBAAM7B,GAAW,MACtB8B,OAAM,SAACQ,GAAK,OAAKC,QAAQC,IAAIF,YAhCtCnC,EAAQI,KAAK,OAmClB,CAACN,EAAME,KAENF,GAAQF,EAAgB,aAGxB,yBAAK0C,UAAU,cACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,YAAU,iCAGzB,yBAAKA,UAAU,aAAaC,QAAS9B,GAAa,WAKtD,kBAAC,IAAU,CACP+B,OAAO,qBACPC,UAAalB,uCACbmB,SAAU5C,EAAK0B,MACfmB,WAAY7C,EAAK2B,Q,SC1DlBmB,EAjBD,WACV,OACI,yBAAKC,GAAG,cACJ,yBAAKA,GAAG,cACJ,8DACA,yBAAKP,UAAU,sBAAsBC,QAAS,kBAAM1D,EAAKiE,mBAAmB,IAAIhE,IAASD,KAAKkE,sBAC1F,kBAACC,EAAA,EAAc,MAAE,2BCctBC,MAff,WACE,OACE,yBAAKC,MAAO,CAAEC,WAAY,WACxB,kBAAC,IAAM,KACL,kBAAC,EAAY,KACX,kBAAC,IAAM,KACL,kBAAC,IAAK,CAACC,KAAK,SAASC,UAAW9C,IAChC,kBAAC,IAAK,CAAC6C,KAAK,IAAIC,UAAWT,SCdvCU,IAASC,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,EAAG,OAENC,SAASC,eAAe,U","file":"static/js/main.fce7eb00.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n// We are exporting the auth created firebase, that includes \n// all of our api keys, project id's etc. \n\nexport const auth = firebase.initializeApp({\n    apiKey: \"AIzaSyD-Tu-0xIv_zrn_GHLxxtLEazTB0oyp2pQ\",\n    authDomain: \"chit-chat-computer-networking.firebaseapp.com\",\n    projectId: \"chit-chat-computer-networking\",\n    storageBucket: \"chit-chat-computer-networking.appspot.com\",\n    messagingSenderId: \"580434425901\",\n    appId: \"1:580434425901:web:2c0c68cce519bb5f9360a4\"\n  }).auth();","import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../components/firebase';\n\n// Here we are setting the loader and user states\n// and grabbing the user from firebase authentication\n// setting it to state and using react-router-dom\n// to push (display to user) the chat page \n\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\n// setting user state \nexport const AuthProvider = ({ children }) => {\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        // grabbing user from firebase\n        auth.onAuthStateChanged((user) => {\n            // setting user to state \n            setUser(user);\n            setLoading(false);\n            // display chat page to user\n            if(user) history.push('/chats');\n        })\n    }, [user, history]);\n\n    const value = { user };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n\n\n","import React, {useRef, useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ChatEngine } from 'react-chat-engine';\nimport { auth } from './firebase';\n\nimport { useAuth } from '../contexts/AuthContext';\nimport axios from 'axios';\n\nconst Chats = () => {\n    const history = useHistory();\n    const { user } = useAuth();\n    const [loading, setLoading] = useState(true);\n    \n\n    const handleLogout = async () => {\n        await auth.signOut();\n        history.push('/');\n    }\n\n    const getFile = async (url) => {\n        const response = await fetch(url);\n        const data = await response.blob();  \n        return new File([data], \"userPhoto.jpg\", { type: 'image/jpeg' })\n    }\n\n\n    useEffect(() => {\n        if(!user) {\n            history.push('/');\n            return;\n        }\n        // checks to see if user has already been created - trying to get the already created user\n        axios.get('https://api.chatengine.io/users/me/', {\n            headers: {\n                \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\n                \"user-name\": user.email,\n                \"user-secret\": user.uid,\n            }\n        })\n        .then(() => {\n            setLoading(false);\n        })\n        // if user does not already have a profile, create one\n        .catch(() => {\n            let formdata = new FormData();\n            formdata.append('email', user.email);\n            formdata.append('username',user.email);\n            formdata.append('secret', user.uid);\n\n            // calling api to get image\n            getFile(user.photoURL)\n            // calling api to create or fetch a user\n                .then((avatar) => {\n                    formdata.append('avatar', avatar, avatar.name);\n\n                    axios.post('https://api.chatengine.io/users/',\n                        formdata,\n                        { headers: { \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY}}\n                    )\n                    .then(() => setLoading(false))\n                    .catch((error) => console.log(error))\n                })\n        })\n    }, [user, history]);\n\n    if(!user || loading) return 'Loading...';\n\n    return (\n        <div className=\"chats-page\">\n            <div className=\"nav-bar\">\n                <div className=\"logo-tab\">\n                    Chit-Chat-Computer Networking\n                </div>\n                <div className=\"logout-tab\" onClick={handleLogout}>\n                    Logout\n                </div>\n            </div>\n\n            <ChatEngine\n                height=\"calc(100vh - 66px)\"\n                projectID = {process.env.REACT_APP_CHAT_ENGINE_ID}\n                userName={user.email}\n                userSecret={user.uid}\n            />\n        </div>\n    );\n}\n\nexport default Chats;","import React from \"react\";\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport \"firebase/app\";\n\nimport { auth } from './firebase';\nimport firebase from 'firebase/app';\n\nconst Login = () => {\n    return (\n        <div id=\"login-page\">\n            <div id=\"login-card\">\n                <h2>Chit-Chat-Computer Networking!</h2>\n                <div className=\"login-button google\" onClick={() => auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())}>\n                    <GoogleOutlined/> Sign in with Google\n                </div>\n                \n            </div>\n        </div>\n    );\n\n}\n\n\n\nexport default Login;","import React from \"react\"\n\n// react-router-dom allows you hve have multi page applications\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport { AuthProvider } from \"../contexts/AuthContext\"\n\nimport Chats from \"./Chats\"\nimport Login from \"./Login\"\n\n// this function renders one of the routes \n//(one of the pages, login page or chats page)\nfunction App() {\n  return (\n    <div style={{ fontFamily: 'Avenir' }}>\n      <Router>\n        <AuthProvider> \n          <Switch>\n            <Route path=\"/chats\" component={Chats} /> \n            <Route path=\"/\" component={Login} /> \n          </Switch>\n        </AuthProvider> \n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}